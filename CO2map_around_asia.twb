<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0711.1636                               -->
<workbook original-version='18.1' source-build='2024.2.1 (20242.24.0711.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='CO2 Data Cleaned (7b-USYCkQvy_lEmApJL8Pg_c340efec81fd455384064564678892f1_CO2-Dataset)' inline='true' name='federated.1qacscl1geeb9s16d7z950jwoq1n' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='7b-USYCkQvy_lEmApJL8Pg_c340efec81fd455384064564678892f1_CO2-Dataset' name='excel-direct.1i5y2a2044eb6e11ynqfi0n9rx35'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Anjali/Downloads/7b-USYCkQvy_lEmApJL8Pg_c340efec81fd455384064564678892f1_CO2-Dataset.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1i5y2a2044eb6e11ynqfi0n9rx35' name='CO2 Data Cleaned' table='[&apos;CO2 Data Cleaned$&apos;]' type='table'>
          <columns gridOrigin='A1:F10001:no:A1:F10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Country Code' ordinal='0' />
            <column datatype='string' name='Country Name' ordinal='1' />
            <column datatype='string' name='Region' ordinal='2' />
            <column datatype='integer' name='Year' ordinal='3' />
            <column datatype='real' name='CO2 (kt)' ordinal='4' />
            <column datatype='real' name='CO2 Per Capita (metric tons)' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1i5y2a2044eb6e11ynqfi0n9rx35' name='CO2 Data Cleaned' table='[&apos;CO2 Data Cleaned$&apos;]' type='table'>
          <columns gridOrigin='A1:F10001:no:A1:F10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Country Code' ordinal='0' />
            <column datatype='string' name='Country Name' ordinal='1' />
            <column datatype='string' name='Region' ordinal='2' />
            <column datatype='integer' name='Year' ordinal='3' />
            <column datatype='real' name='CO2 (kt)' ordinal='4' />
            <column datatype='real' name='CO2 Per Capita (metric tons)' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[CO2 Data Cleaned]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F10001:no:A1:F10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[CO2 Data Cleaned]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CO2 Data Cleaned_7338F1E6FB7B46199257AEF67878CDB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[CO2 Data Cleaned]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CO2 Data Cleaned_7338F1E6FB7B46199257AEF67878CDB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[CO2 Data Cleaned]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CO2 Data Cleaned_7338F1E6FB7B46199257AEF67878CDB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[CO2 Data Cleaned]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CO2 Data Cleaned_7338F1E6FB7B46199257AEF67878CDB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 (kt)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2 (kt)]</local-name>
            <parent-name>[CO2 Data Cleaned]</parent-name>
            <remote-alias>CO2 (kt)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CO2 Data Cleaned_7338F1E6FB7B46199257AEF67878CDB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 Per Capita (metric tons)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2 Per Capita (metric tons)]</local-name>
            <parent-name>[CO2 Data Cleaned]</parent-name>
            <remote-alias>CO2 Per Capita (metric tons)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CO2 Data Cleaned_7338F1E6FB7B46199257AEF67878CDB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='CO2 Data Cleaned' datatype='table' name='[__tableau_internal_object_id__].[CO2 Data Cleaned_7338F1E6FB7B46199257AEF67878CDB3]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Anjali/AppData/Local/Temp/TableauTemp/#TableauTemp_1qoq1500d5b0291b2cjiy1vbwobn.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/27/2024 07:14:56 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Code</remote-alias>
              <ordinal>0</ordinal>
              <family>CO2 Data Cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>229</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CO2 Data Cleaned_7338F1E6FB7B46199257AEF67878CDB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Name</remote-alias>
              <ordinal>1</ordinal>
              <family>CO2 Data Cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>229</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CO2 Data Cleaned_7338F1E6FB7B46199257AEF67878CDB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>2</ordinal>
              <family>CO2 Data Cleaned</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CO2 Data Cleaned_7338F1E6FB7B46199257AEF67878CDB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>3</ordinal>
              <family>CO2 Data Cleaned</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CO2 Data Cleaned_7338F1E6FB7B46199257AEF67878CDB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CO2 (kt)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[CO2 (kt)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CO2 (kt)</remote-alias>
              <ordinal>4</ordinal>
              <family>CO2 Data Cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2609</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CO2 Data Cleaned_7338F1E6FB7B46199257AEF67878CDB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CO2 Per Capita (metric tons)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[CO2 Per Capita (metric tons)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CO2 Per Capita (metric tons)</remote-alias>
              <ordinal>5</ordinal>
              <family>CO2 Data Cleaned</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9574</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CO2 Data Cleaned_7338F1E6FB7B46199257AEF67878CDB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='1000' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='CO2 Data Cleaned' id='CO2 Data Cleaned_7338F1E6FB7B46199257AEF67878CDB3'>
            <properties context=''>
              <relation connection='excel-direct.1i5y2a2044eb6e11ynqfi0n9rx35' name='CO2 Data Cleaned' table='[&apos;CO2 Data Cleaned$&apos;]' type='table'>
                <columns gridOrigin='A1:F10001:no:A1:F10001:0' header='yes' outcome='2'>
                  <column datatype='string' name='Country Code' ordinal='0' />
                  <column datatype='string' name='Country Name' ordinal='1' />
                  <column datatype='string' name='Region' ordinal='2' />
                  <column datatype='integer' name='Year' ordinal='3' />
                  <column datatype='real' name='CO2 (kt)' ordinal='4' />
                  <column datatype='real' name='CO2 Per Capita (metric tons)' ordinal='5' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='CO2 Data Cleaned (7b-USYCkQvy_lEmApJL8Pg_c340efec81fd455384064564678892f1_CO2-Dataset)' name='federated.1qacscl1geeb9s16d7z950jwoq1n' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1qacscl1geeb9s16d7z950jwoq1n'>
            <column datatype='real' name='[CO2 (kt)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO2 Per Capita (metric tons)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[CO2 Per Capita (metric tons)]' derivation='None' name='[none:CO2 Per Capita (metric tons):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[CO2 (kt)]' derivation='Sum' name='[sum:CO2 (kt):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO2 Per Capita (metric tons)]' derivation='Sum' name='[sum:CO2 Per Capita (metric tons):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1qacscl1geeb9s16d7z950jwoq1n].[none:CO2 Per Capita (metric tons):qk]' included-values='in-range'>
            <min>0.00058026499999999995</min>
            <max>39.100000000000001</max>
          </filter>
          <filter class='categorical' column='[federated.1qacscl1geeb9s16d7z950jwoq1n].[none:Country Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Azerbaijan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Hong Kong SAR, China&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iran, Islamic Rep.&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kazakhstan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kyrgyz Republic&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lao PDR&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Macao SAR, China&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mongolia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Oman&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Syrian Arab Republic&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tajikistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Turkmenistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uzbekistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Yemen, Rep.&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1qacscl1geeb9s16d7z950jwoq1n].[none:Country Name:nk]</column>
            <column>[federated.1qacscl1geeb9s16d7z950jwoq1n].[none:CO2 Per Capita (metric tons):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1qacscl1geeb9s16d7z950jwoq1n].[Longitude (generated)]' field-type='quantitative' max='30348683.918561727' min='-2018790.1144071887' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1qacscl1geeb9s16d7z950jwoq1n].[Latitude (generated)]' field-type='quantitative' max='13906193.480924027' min='-3447609.6671422953' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1qacscl1geeb9s16d7z950jwoq1n].[sum:CO2 (kt):qk]' num-steps='6' palette='green_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qacscl1geeb9s16d7z950jwoq1n].[sum:CO2 (kt):qk]' />
              <text column='[federated.1qacscl1geeb9s16d7z950jwoq1n].[none:Country Name:nk]' />
              <lod column='[federated.1qacscl1geeb9s16d7z950jwoq1n].[none:Country Name:nk]' />
              <lod column='[federated.1qacscl1geeb9s16d7z950jwoq1n].[sum:CO2 Per Capita (metric tons):qk]' />
              <geometry column='[federated.1qacscl1geeb9s16d7z950jwoq1n].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1qacscl1geeb9s16d7z950jwoq1n].[none:Region:nk] * [federated.1qacscl1geeb9s16d7z950jwoq1n].[Latitude (generated)])</rows>
        <cols>[federated.1qacscl1geeb9s16d7z950jwoq1n].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AF5C90FD-BF29-40D4-B5B8-31DCE317EBEA}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1qacscl1geeb9s16d7z950jwoq1n].[none:CO2 Per Capita (metric tons):qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1qacscl1geeb9s16d7z950jwoq1n].[sum:CO2 (kt):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qacscl1geeb9s16d7z950jwoq1n].[none:CO2 Per Capita (metric tons):qk]</field>
            <field>[federated.1qacscl1geeb9s16d7z950jwoq1n].[none:Country Name:nk]</field>
            <field>[federated.1qacscl1geeb9s16d7z950jwoq1n].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{C0178993-CE0D-4920-B87A-D2F9598F04B8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29aZBc6XWm99w198zKrCqgsDaAbjSavZFNcWtS4qrWUGSLpGRpJMuWPLLG
      kmfGEZqwwjF/HLbssCMctn9MhCO8yvI4aG0cSdRQFCUuTVEiu8neG40GGvuO2iv35e7XPwrn
      q5tZC6oKhV5Y941oApV58+Yt8Dvfd5b3vEeL4zgmRYpdCv3tfoAUKd5OvCUG4Pv+W/E1KVJs
      GW+JAYRh+FZ8TYoUW0bqAqXY1UgNIMWuRmoAKXY1UgNIsathyl98379nwWqaBXr74bouURRt
      6lpd1zFNE8MwtvQdcRwTxzG6fvf7ahRFhGGIZVmb/kwQBLiui67rZDIZNE1D07QNP6MMwLKs
      LX3ZVpHNZu/ZvVPcGa7rspWap23bmKZ5xwWUhNx/K58Z/XwURQRBQBAEZDIZMpnMHT8TBAEA
      /X6fIAgwTZN+v4+maVSr1Q0N0lz3nRS7FmEY4nkeprm15bHdhS8IgoBer4dpmhQKhTUXbhzH
      aJpGHMf4vk+/38d13aFnSHoyvu9vaESpAaRYE7quq8X2ViCKIrrdLplMhlwut+H3xnFMr9ej
      2+0OvW4YhjKAOI4xDOOORpwGwSmGkHSTtrP4JQ7Y6md838cwjDsufrledv2kn2+aJlEUqcVf
      KpVW3Wv02dITIMUQLMsiiiIsy9qWAWz3xBgMBuTz+aHPS0yQdIW63a6KEeQagRiFYRgUCgV6
      vR6+7xPHMcViEU3T6Ha7WJalguTUAFIMQdM0bNvecgbobuC6LpqmrUrCBEGgDEPXdaIoYjAY
      3DGbFUUR7XYbWMlAOo6DZVkqS1Sr1TBNMzWA3YLN7MyaphEEAbZtv2W+v7gzowGvvO66LqZp
      EscxjuOQy+Xo9Xp3vOcooigaCpbltdQAdgksy1Juw3rQNA3TNHFdd1XmZCspTrk2DEM0TUPX
      9Q0/l8vl6Ha7Q0F3FEX0ej10XVc1KtnNJQu0XURRhOM49Pv91AB2CzazYGShrlWz2eyJIHn5
      wWCA53kEQUC1Wl33VBHXZ2xsTAXDyfpDFEVomobneer6uzUAQGWQUgPYJZBFtdHCCYIAXde3
      VRCV7E+v16PRaGCapjKAIAioVCpks9mh54jjGM/zhqq2g8GAVqtFqVTCtm1831eV6SAIlCEI
      xFDuZBDrZbdSA9glkOBxo13Ytu1tZ39gOdBsNpvKfclms8qt6Xa79Pt9yuUy2WyWwWCgToVm
      s6lcnTiOCcOQRqOBbdsqrSnPKX83DGPovY0g16xV10gNYJcg6T+PIpfLqV34buA4DoZhqBPE
      MIyhVGYURbRaLbV4ZaGvtzt7nrequCXY7OIXrBfDpAawSyCLLgnZ+ZOLX9wSwzCUP74ZTpDv
      +3S7XWzbVoWoZJFK3B+hWbiuS7fbXfVMskvLf4Zh0Ov1hnbx5J+bKZptdG1qALsEowYgxSJZ
      qEn4vk+n0wGWs0flcnnDe8dxzGAwUD/rus6+fftotVoEQaCC20KhQBzHLC0t3TEeScYIa70H
      q7NByRpBLpdbVctIXaBdDAkoBbqur7n45VrXdbEsi3w+v+F9JV/fbrcVfyiTyeD7vqI3uK5L
      GIYMBgNlKHda/OvFKsnPjd5DUrdJwtzoNfKaok9s+Nul+LGBbdsMBgO1ILLZ7LqLzLZtarWa
      +lkwujBl55ccvgTSxWKRpaUlgKFduN/vb9pvl++SApks3I0+L8+2UWZo1IVKyXC7BLquq6wM
      cEeW5GaaSYS+LIEuLLseo1XdYrGIruvYtr3l504u/HvBTk1PgF0ECURHKQGbRXJnTRpIcmEK
      5yaTyWAYBmEYYhjGKt7+nSBFufXSoDuF1AB2ESTrs9VOL4FUeeX0kJ1eKseStRFac7fbVbl9
      eV/X9U213q7nv4+6YHeL1AB2Iba7+B3HwXVdyuWyOgFqtZpyfxzHUW5WGIb0ej3FL0reR3by
      UVrDVopaW8FacYxyBbd8txS7FrJ7j+7ows7M5/OKcry0tKTSn4CqMKvg8/bpIZkjQBmSvCYF
      tNFAWP6eNKRkM36yh2CtrFHyJEmD4BR3hHB8Wq3WUDZJFpQ0sGezWXq9Hp1OB9/3iaKIYrE4
      VH8Q314WdpItmsz9e56nskzCAUp+BlYT45KLXQJuuWcURcv/Ja6N4zg9AVJsDkEQkM/nlSsk
      OfdGowFAu90eolFLShRWYgeJFUbdELUb67pyoyR9KieKBNTSGyALOvl8ksJNtkbKvWdm5/k/
      /vx7VMt5fusXP0Mul1v+ztFftF2f58yZMyzUO3f8R6kvLOBHK1YXeAN6zurKXYp3P/L5PPl8
      foievLCwoNKgsnMnF7fneQwGA+XSSPCbTJMOBgP6/T69Xg/XdfF9f1URSzJKcj+5JoojLl+9
      QhiG/PUPvs3//Kf/K4tLi4qKnYwzLt2YYd6xODcfcPLMxZVTJB6JKs5fvMCxI0fRdZ1b1y4S
      WmUmiibXZxvUiiGvnV7i45/6MHlL4+SLP6Cw/zH2lSKuTdc5cng/oWbRnLtGaFW478BeNG0l
      OErx7obsvGEY0u12abfbBEFAqVRiMBhgWRa9Xk/xgQqFwipym5wksMzJz2azQwoUoylWhdDj
      1TMXed+j7+H86y8z3Yv4/oXvc60/x325vQxij1m3Tj6y0WL4zENPUiuN8Q9vvkDZG+P6IrSM
      Cjpw35jOr33uw+zbO7naBQqdLm+++SZTB4/Q6XS5tTBNeGgvmmZRqo1z9EiFvG0yaMzQCvN0
      bl4iM1ECTafXatA3ivRuf+7g/r2Yb01nXYo7YKeKSJ7n0Ww2Fc1Bsj3JgFXXdbVbh2GoCmGZ
      TEadAhK0JolvsEGGKhhw8uRJDhw6xHe/+12eWyjgdd/EHzfoGg0GrR6FfXto1+foOzFtr0X9
      Zp3y1B78qxcplI6il0yWbl2lN36YP/7WS0yVzNUukK5JJD2g2XCwLINCsUh7cZ6+b7A4d42+
      FzC30OSRRx5mopjFKBTptxboOAG65qnPpfjxgnSLJdUbxBfPZDKKQCfEt0wmQxAEFItFTNOk
      UqkodQZYrhqXSiXK5bLKGK2V5rQsC103OHZkit//f/6I77zZxu030OzH0doDnL5P7dgE/dkW
      kW6jG9CZbTF+/wEGM03QLJxWm8BziKKIxux1ri66GKa52gW6F0hdoHc/xPXRdZ12u62yMp7n
      qUyPrussLi6qCm4mkyGfz1Or1VR/cKfTWe7FNU0VV9TrdUW+k7SpkPXku/G7fOMHJ/mDP/xL
      ivvuJ9QsOrNXMS2LfLGH/YBP+9YAp92g3fE5cGwC7zqY5ceJQhc91rByJu1GGzSLp558lN/4
      +U+lWaAUm0Ov16Ner6vWRKE8S21AfP/JyUlmZmbU65lMRmWBbNumXC7jui6dTgfP88jn82Qy
      GVU1lv4DoVRIZ5muZ7F0nT3veZL4tuNSrIwDoEceZqNFPuez0HoDO2syrh8nPDZBpOdu/wbL
      +3x+DKpGn6eefIxDhw6uNoAo9Gm0ulTHxtB1jV6nhePHVKsV9BH/zHNdTNum32lhWBmsTA4z
      rSz8WMIwDMXtN01TLX5YVn+oVCoMBgMymQylUolsNott23ieR71eV4oUlUpF9f7CsiZQLpej
      WCwqQxHDWVpaIggCXnvzMn//6kVmujqxtnqBRbqNxyQAYwf3AeCTXKsxxyYy5DWX8Ylxfumz
      X2Rq795l6cTRm928cJZOBG0Pjk5VOXvuHHvGq9Q7ffK4ZCqTjOV0rk8vUqkUMDou33v2RT7w
      gQ8xvjfLwq1r5Gv7qBQ2VvVN8e6C8Pxt21aZG4H07ko75MTEBIPBgFwup3p/5RqRN8nlcqo6
      rOu6km+XPuFer6dcKM+5zHTXgE0F8Wt0fcUBHzlxmLFygY9/7Enq9br6nVYZQCZvc+bCPO+b
      PACA7/apN01qU2WWZhvMXplmX63IsQce4Nq16xw5uJ9jD74HvbvIdOSj6wXG0vj3xw6izgbL
      /nmr1SIMQ5XVmZycVIvXsizVbCNyJ0EQ0G63VYVYSHntdhvTNMlkMkogV9d1pRHa7/d578PH
      mW97XJutc72lrTKEJB17lIqtaRqBZvHs6Vv89i9+SjX+S2vmqvOk3uozVTG5dG0GgMLYJO99
      4v3sycMAC9vSsU2d+YUl4hi025IVmqZhWjadxiIDb2MBphTvPoiyWrvdZmFhQWVshB06Krol
      KU6ZOyEp0ORJIou22+2qhW9ZlqJtw7LrValU+LUvfYYDE6V1ny/JGUpCcjxeGHPo4H4AxsbG
      CMNwuXo8mgUKAx/XD7FMQ6mJmaYJcUy/38ewbGxTpz9wyWRsDEMnjGK0OEYzDDxnsBwPmCvH
      QJoFencjjmPa7TaO46hANakd1Ol0KBQKZLNZcrmcqugahkE2myUMQ1zXZXFxUemOCqfItu2h
      xSs0iyAIlBSiZJz+zz/5BqdmPGJt7V7fjRKaZuzx659+kC98/meHDHeVC2SYFnlz5ZdTVFZN
      I18oqNcLhZVe0cRaJ5vbuIc0xbsHSZam4zgqOHUch1arhWVZypcXFQlJYwqRTU4K2flzudxQ
      s3ulUqHdbg9pFjmOg67rinoh3WT/5Bee4sLlq/zVc2eZaS3fN2tpHKnZnJ11CPX1O84idDq9
      5cBbKNqapqV1gBTrQ/g7CwsLajcWmkOysuy67pr//4r6g2maTE5OrlJ5ELqEruvcnJ6mWimz
      ML9IoVjAtm0VMCdlW3zfp91pcvbNq4DDxL4jXLh+hm/+8AUc7QSskSXy+w3i3iL/77/+r8kE
      HXpmFas/z4tvXEzp0Ck2hjSyl8tlfN/HcZxVNAbJ4oyKVxWLRcbGxiiVSkMSiEkWaL/fx/M8
      XnjlJYrFHNeuXCN2Wrx66hye2+GF51/gjQvXqM/e4Jlnvs1cy6FWzaCFJo1Gl8hr8+Wv/THO
      IKazeIOFG5eIgwFL19+kuTgPcURn+hy/+xtfQtd0Xn7jLOdOvcorF67yqU/+ZFoIS7E+HMeh
      2+2uJDlMU+X2ZfxQGIYqBSqEOFiRYRFjEVcmk8kMaQjBspHN37jMX/zFX+JFBaLLN/jgg/s4
      PTuNOfYATmOa07c6fPChA/zwxhL7qlWunX6BY5/4PN/+uz/FOjLG4pWLZHplagXozJzjvvs+
      TmvhJj//gUd55Jd/mxvXb9Jstzn/5gUi3ebQfRN85Y+/kp4AKdaHLPiktIlw7kURQuICyfZI
      mrHf76smGdu2VZ9AJpNR7M84jlXAPHXkIb74xS9wZF+NLB7fe/Es+/fUOHjwALlslmJO58VX
      TxFGy7HEkz/zi0zEixw4cJzGpVlsPQOlAW7e5eOPPszRsZgPP/EIv/4rPw++i2EZXD37Jh95
      6ud46mOPMdM1+OLTT6UxQIr1IZkb2dU9zxvSE5IGGHFrJBYQX3+ZxLbS8uh5HqVSCV3XVSON
      GEa5XF5TmDeOY5rNJlfOvc6b5y7x6E/+Ix47ulKFdl2X3/nv/xVe4NPU+mgx7A2zPHbsvRw8
      8h6e/pmPL9cCbku2l0rDqdTUAFKsi263y8LCAmEYqoUv7E+hREgKU8hulmUpY5CuK9nthQQ3
      NjamUqByQsD6VGgR3zIMg2q1OnSdKFH/8Ve/wjcu/QDTA8vR+IkTj/Mv/+l/pgpyQRDg+/4q
      QbDUBUqxLoTvr2karusqLpCwQOU9SWFKX4AUmYTX4/s+vV5P5f+XlpYol8urGmbWg5wSaxW6
      NE2jVCqRN7P8+hNfoJqrEFoQEA1JPyb7FJJIg+AU6yKXy3Ho0CFu3bqlem6jKFJuTrKpXXL3
      Yhiy44tWkATKsBwgz8/PK0r0nRTjhBohwfRoTAKQyWU4duwY/8Ujj/Lciz/kl3/hl5RrJgYq
      OqXimkF6AuwabNfTtW2bPXv2qKquBLSFQoHC7cJov98f+p4kt0eCYjECWYwyEEPcpDuhUCis
      O+dsfn6eD3/gw3z9b/6aUrnEf/Tv/xq57PJ9fd/nD//yT2l3OmtWi9MTYJeg2WwyNja25bZI
      TdMoFAocPnxY7b5J0VoJdqVS7DiOKpZZlqX6gKXBRVwp27apVCqbHsck8YUgjjza7YDKWJ4L
      Vy7y7KkXyE+U+Oozf82vfu7fY+AM0HWDP/jzL3P24nl+8v1PMlapEEURc/Pz7J2o0GinUyJ3
      DcQn344s4ujiS0IWu6hDSDo02TIp7keS4FatVlcNxt4KwmCJ115ocN+RkEZjgB2ZfOvZb5MP
      ivzch5/kT77+Td6cPsfN6WniYpYb1y7xjb/5Wx5/7GFe/tFz/OwXv0guvzc1gN0CST3atq0U
      3GD7k92TEHJc8oQQJJXhfN/HsqzloPUuFn8S569c5+F9Bdq9Q+w/doJb1y7yla/9DY8cP8LX
      Tv0tjpnlkdwU//bP/oRB38XKWFyZ7/ONv/oLLs10UwPYLYiiSGVlJGDNZrNKsWG70DSNYrGo
      mkxGZdeTkicinCvaoncLTdMYq9TIZODo0SM8cPUKl6MLnLl6mlI+z3/+pd/gjeseh3MW5y6+
      TC9s8VNPfoTrF8+zb2yS6UZaB9g1WFhYUJmcJCzLolar3fWC7HQ6Sg80jmNFc5aagZw4hUJh
      VTFqpxBFEQuLC/zZ175KrpDDjwJOHLyfxx57jOnpGaIwZGJyAsu0mJufYzAYpAawWzA7O6vS
      k0k3JZ/PUyqV7toAgiBgfn5edYhFUaRmBSfTp5lMZkcMbiOEYUir3abeqDMzM0McRly6fImJ
      8QkGjsMnP/EJMpnM8kmUGsDuwK1bt1RjSbJ1cacWYxiGzM/PqxNASHRCfxgMBqoQtn///iG5
      xDtNq9kJiJpdUsHa87w0BtgtEH3NJHYqEIXVtYBsNqsyQjIZRjJBYiSO4+B5HpVKZUeeYSNI
      a6XneUqCxff91AB2I0Y1+ncCsqPCSgeZGJ1Qo2Xkqq7rdLtder3ePYsH1oIs/qRydGoAuwRJ
      LX0pZG22CLUZlEolVaV1XZexsTHVFyzB8OTkpPpOWYRJCXV5zp2EnDa+76vmnuS/RWoAuwTJ
      hWUYxpBG505AmJ2O46jilyi7JWVOYGUavajA3Ut4nke/31cKFEnp9fQE2EWQHXdsbGyox3an
      kJwFJjtuFEXLwla32yHF5dI0TblHd1SFvksIg3WUQi2DvVMD2CUQktq9zMYl3RtY6f6SRpRk
      zPFW+f5Jt08gVAxIkOF839/U+MrtQMrhKd5emKa5qh93I2x1VxbqsbRRyu5bqVSGVOQ2Az/w
      CaOQrH1ngxXVaj/w8SIfLQbbsNcclDeKtA6wSyBShpuBaZrkcrktE+fWkyfcCrrdLu1Omy9/
      74+YKIzzm1/4jQ2vj+OY559/nnw+z7dOP8P56DJ216Rqj1HNVPjNp3+DSnn9NGvqAqVYhSRz
      dCu427TqpeuX+YNv/Rs6QZefOPQEX/jY06uuuXnrJvv37VcdaP/uW1/j+csvYuVs2sUeGOAW
      fGZZYL67wLMvPsfnPvOza35fFKV06BTrYFT86l5jemaa//07v49lmfyrz/0uB/YfWPM6SWU+
      /8oLfOXkX9C1+zAFA5bd7KGxqRkYHxvf8HvTjrAUq3A3OfnkdMet4MyFNxm4A/6DD//yuou/
      3W5z/IHjPPfcc3z5mT+km+kPqaEnn1cLNA57Bzh84NC636lpWmoAKYYhRaKdLJLdCe1Om2+9
      8QwfnHyCh088rF4XfVH5M5vN8v3nf8DF2cvYY6vnT4jx6X2Nw/5+TN/g9TOn+NGrz9PtdnEc
      h9fPnKLeqCsjTV2gFAqSyxfOznZOgO185tT5N3B9l5/7zNNDn7989TLPPPtdPv2RT5HL5bh0
      +RJ/dO7PCLMRFNa5WRxjdQwalRbtUpcrl24Q2REPnzvBofGDfOfq97A0k9/56X/BA0fuTw0g
      xQqSacy3yvePooiXLr3CsYNHqY5Vh9574fxLvDI4xZ5ze5idnYGCziFrH1fjW2sNglFwJ0Nc
      vbt8/1wMaJzxz3Nm9hzkNKLAp96oM9i7PzWA3QIRr7rTNaKdL1o8gu3EBZv5TBRFNObqRKVh
      avTC4gKvzr9OlgzPXv0RZk+nrrXJNzLoFY0ou06coWlrG4em/oc4jrk1c4tnz/4wjQF2Czbj
      0wtn526Q1Pzs9Xp0u11VEFsLpmnyW7/4T7l/7BgvvvwivV4PgMWlRVpeG0d3mSxNsLinRaTH
      9MdcYu0uS1cWfGf27zkTnE8LYbsFjuMMcfbXggTApVJpVe/AZiAkNxmM4TgO7U6bZ19/jvcf
      f4LHHn1s6GRxXIdmq8neyb0ATM9O86ff/Lc8cPQBDo8d5P96/t+ABiW/QD3fIr4H/kpqALsE
      mzEAUWrbDkNTdv1Op0Oj0Vgmmpkmf/vit3jZeR2tB8fH7+eff/63sEyLF155gcMHD3Ph6kUW
      FhcYr9Y4v3CRm+1pFq0GVa9MzRjjcnydRzjBlcWr9CZc2OHkVBoD7BKIbs9a1VrbtpX04N0E
      vzLXq1QqKeXoB6bu5+WLJ4kLcN65xH/1R/8tv/v0v+SZV/+Oj3kf5Zlrf8+SX4e6RmxFYC9/
      f8Nu0wjb6LGGYRk4WQ8tgPi2AdxpJthmkcYAuwTrLWxN08hms4qanBw5KhTqzUAoxmr21u17
      +aEPkUa1W8EaGPQ1h9fffJ1sIcczl7/Holan12kxd2ueMEo+GOh9mGxWuRlPE1ZjBqGDPM3o
      c3ndPvMXZ+l13KHX4zAi2GBqaXoC7BIkdfoFovU56u/LaSHzue6k4pwcdCE+fqVSwfd99lb2
      oAGZfIZ/9on/hPNXL/CXV/+akFD59Au3muw5XGP2why1fSUsWyeIDRo35ugf9ulcnCc7OQ5R
      gEGP+WtN9j64j97cIo5vsOdIjcZ0ndx4lUzWpHF1Fr1YppDXmDkzTWZqHCt00QslMhlw2i4Q
      ERl2agC7BTKWVCATHtda2IZhKDnzzRDcZPdXbYamSalUYmlpiUwmg4lJPWjwF9/4Kg2tRZAP
      wFj53nDgMH12ltqxfTRuLlCt2jT6NkGoETh9uh2fTC2kOdekNp7DbzWZvp5H7zuYWZM4BsKQ
      hctzVCdyTF9uYJhtyhN59p6YonlrnlvTLqbeojhmUHvgEM7iEjfPzqUGsFtgWdaQAYxKGArE
      JZIgdr3rBGEY0m63cV1XiWGVSiWazSZRFFEqlthrT3CTWS5q1wiscNWkd7NYYHw8R6vt4Pcc
      ZuptCkeP4DebtOoWthlTv9XEsKCz2MbM2ARhRLaQqFVYFgcfP4QZDqjPdClO1Yj7HWbPzZEZ
      y5KxA0r7q+iRT75o073cRTONNAu0WyBaPSJUNTY2tmX68ig7NAxDms2mCn4zmQzFYpFsNsvi
      4iIA/UGf/+17v0/Tam/72Xcq4F0L6QmwS6BpGvn88hBzmeyynXvAiiHINJgkA3S0x/dvf/Qt
      OpkeRGvfczO4l3t0agC7CKIGsV0DGF2Io7OCNU1jMBiQy+XUHDAndAmj8B2bb3yHPlaKe4Wk
      esNWIByhZDFNqBO1Wo1isQigdEajKGJxcZEr3avv6FX2Dn60FO80yKjRpLtTKBRUACwS6L7v
      U6/XMQyDgp6Hex5lbh+rDODqpbOcOnWKuaXtBC0xZ06+zCuvnb4bly/FOwyy+8uoI5kAL+/J
      z+Pj42iaxnf+7jvMzs8C8Gs/+atMutU17yvu06g7pgUQ1SOcqx7RQoh2+7WtYFMuXrxGDDAY
      DNA0C93QOX/+HKahkdfhWitgb9mk0epQ23uEhetnCI0Cx4/s48bMPMWxvdx/eC+O52IXylt7
      2hTveMhU+Hw+T6/XU6ORXNcliiK168dxzKEDh1Qadbw2zgf3/wTfWPj2UO4fVmeVAJiNaDQd
      XCMkMiCzpJNrmER6TOFoFrbO0QNACzUmwxrdoEs/v1ItXnUCmNkiDz/8MBOVAp7n3paVi3nw
      4ffQ77s89tjDdJt1KhN72VvOc+3qVQZBjGFoxF4Hs1CjMXud2aXO9p40xTsSEkC7rqumzLTb
      bebm5tQsYGlY37tnL4V8gSiKcF2XUrHEUe0wGqt3/LgbES4GaCHgg9cJGNghkamBpuFmYpqm
      R1v38af95euSuH0SlbwCNacC8dpp04xr8U8+/h/yLz7525jd21akrWEAlXyG06dPM19vk7MM
      YjNPeXySnKFx5PAB3nzzEoeO3MfC9A0Cu8gjjz5K0TKWpbatAnkjYv+RI2StbZpqinccZAyS
      6H+WSiU8z2NhYUHxhVzXVbOBoyhSI5gymQyPnXiUX/roL/CI8SC5QWZ550cjmg1ZutFnvt6n
      eaFP42KPfriGr6MtG0Nj4NK40Meb9sGJmfTHeWriU4z1yzxcOcE/f+q3eNR6iBP6/RieDmHM
      uDeG3TN5Ys/jFPLL02mOFQ+ruGRbhTApqmxW3i4thL392AmJE1nog8EAz/PUdMh8Po/rumia
      puKBOI4pFApqMozsyv/w4vf52/p30YDueYe26a+qDN8JdqDzpUc/zSc+9FPkcjk1+skwDLXz
      X7txDcdzOHb4GJ1Oh1K5hGksV7a73S5//sJfcrV5La0E7xbslAFEUcTCwgK9Xk8t+CAI1PR1
      TdNURkjqAtVqVX32v/vj/wFnYlnDJ25ElPoVdNPgbPfG8pfc4RHHyPPpEx/hsz/504RheMf+
      5aSyRD6fV1LtrVaLF86+tNoFcrp1XnvtJDOLzbXuRru9tm8/fevWxk+e4m3FTix+WM79y5T4
      fD6PbdtMTEywZ88ebNsmiiJ1OhiGsVwUy+m4WoZXX30Br3i7PTKGJ/Y9xq9+5hcI+z6FnkF2
      oGE72rJff3tbDj2XhXM36bUGyzv/+57i6U9+FsuysG2bMAyVy9VqtW//nh6NpR7T0zdVinaU
      0Xpp5jIvzb+6Ogt04dINHn/ve9EIePPU64RWnrwZ0Ov2KNX28MapN/jwRz/CzfMX2Hf0CAtz
      s+RK47jdBvsPrC1olOLdD+koM01TTVmp1WqUSiUsy6LVajE1NcXCwgKdTkelTsS8FqAAAB5m
      SURBVCuVCnH7Bq9eisgXpnj60Gf5+g++RsMa8HrwOh998GO8ceE0upVFz2mYtk4079GoN8k/
      MEW2PaCSn2RwYwnzcJb+UovFdoeZc6fpGyVOTE1gTFZp3ZrmwhsnMcqTfPAn7uP0yToHjlp0
      6rOcu17nyQ89gaEvG0AQBPRbPY6UD29AhXAWuTLb4eB+G98weezh+7kw7XDkyFEmxnIsFMcp
      mjEzEczMTlMr3l0zdYp3NqIoYmlpSVWSJyYmFLfI930qlQqDwYDJyUk1Keal117m7IXzGHaX
      L3/j+3zp85/H6veZm22hRS5vOl3+7u+/y+d++gv8u69/lciJMNHJH53EdgdMuFnoDjg3d4Vj
      xx/hfZUJAmJOn71APsoyke9z6tULPPy5J7lx7QbF6h4e2J/nzLV5NN3m5s2rxKHNkx97EsPQ
      MW/TvH3f57Of+exy++foL3r82CFOnnyNqQP3cd+eHGY2R6WUA92mXDJoDxZYbDpMTFQxzBhN
      06lVq1RTA/ixhgy+y2azmKapqA+wQq8Qdqlo79vZDD/qniUYNBh7zz6++fy3mDhYZbbV4KeP
      n+CB3AEOT1Y4d2MBN46o7s0zN99HvzZNpx1SK4ZYWYvPfvwf8f5jx9m7d5zrsy2O3XeAl7/7
      dyxNTPLosb388Lt/jxYYVIwWPzw1z/uffB836w6hbmOj8cOXT/H5n/kUhq6pvggZEJgGwSk2
      Bd/36XQ6yq+HZVdC2idzuRxhGGJZllKH6Pf7/I9f/l9oOB0iPcYODaJBn/umTvDE8RO899HH
      8TpLPPfyG0SZEt7SVb4/e5VmsMTTD32CIAyp5Ev0nD5P/dSnVfeapgWcPXONBx86prJLjuOg
      6/pQaycwNA8tn89jGAaLi4uKDp4aQIpNQbIp0vooDfa+72PbtqJBJK8X4wjCgMAPaDQb2JY9
      RKG2LEsNULFtm5nZGdrdDsePPQAsq0Hruk4mk8F1XXXyJO8v6VlAZaMEkpmSXgVYnkFg2/ay
      0az6RaOQ5597FidYsYtBt4l3b4bHpHiXYDAY0O12VQ1AXB7TNPF9n1arpbI/nuepBanrOrZl
      L88LdpbFsmQ4nhiC/KzrOuO1cU488CCapqkmGxgebieZH4F0scnss2SfAqwYiNDAi8Wiml+2
      KgZozV5l8uAhbk4v4CxdZ8/hBwiacxT2Z7l0+QL1ns/HPvT+t+LfPMXbjKRzIMGjLNx6va5m
      jsn4o263q5rvhR8kC1hqBfl8XmWI4jimWCwOfU4MCBha0Lquo+s67XZbpUBhZSZxstgm45nk
      fbmvDP0Qg4E1yHA35pbQrDxdp84Dhw/w5tkzHKqW8BdmiewiWmfh3v6rp3hHIYoi6vU6/X5f
      jU0yTVMNwNM0TVWB5XpATXAR33x8fJxMJqMWpmEYyw3zpkm5XMbzPMIwVKNWM5kMYRjiuq5a
      rLlcTg3k7na7KjDXNI12uz3UiwArMo1yyiRnEqvOtdEYwHFdsrf9rdB3cAKdUs5Gt0waS3Vy
      xSKFLepHpjHAuxNCdWi1WspnloWb9Pdd18UwDCWvIu8NBgP1umVZFAoFVSNItk7m83m63S7l
      clkJ+GqaRqPRwPM8FWBHUaSaeSQWkdd831fFrtGwVnqgTdNUQfq6BnAvkBrAuxOe59FoNIDl
      4NJ1XSzLwvM8pQAhlV9YzhRZlqXmC4i/L9fJqFTHcYb6i33fx/d9isUilUpFuUOSeRKSXRAE
      Q4oVcRzTaDSUEp08hyhTCCFPPiMnQRJpT3CKdSGuRHLRSEbGcRxgZei1LGhxXQaDAZlMRqlS
      S1wgbozsuxILiFuVPBksy2JsbIxms0kulyOKIrXjy45eKBRot9vK1TEMg/HxcZXyHE2LjiJt
      iUyxLgzDUEFkMpgElO8tizaZd5cTQFwiec9xHKUZ6jgOg8FAxRFjY2OrhLokh5+cMG/bNtVq
      VRllLpdTqU/Z6bvd7ipNoyiKlPR6EukJkGJdeJ6nGl0kgBTfO9n/Ky4OrGRdJFUqRhNFEYPB
      gDAMqVarWJaFZVlkMhm1cNeCGFkQBBiGQa1WW0Xsq1ar6nTwPI9er0ez2WR8fGVCZBRFii6d
      /Hx6AqTYENLlJQvQ930Mw8BxHFUJlgxOv99XKVFZkGEYKuEsORkWFhYol8tUKhVFZ94oFM1k
      MusqW8OKOkWhUFCu1CjkNJA4QZAGwSnWhVAMZmZm1M4ubojjOORyuVUnQzabxfd9VXQSN8b3
      fTV7QE4QOQUqlcod6drtdlvRMNYyBMdxVIan3+9TLBbVdckCmgTS8n3pCZBiXUjBqFqtEoYh
      hUJBtUVKEUwoEor2cLvgJbtwUoFaXCH5e6/XG1qMG0Fo16M7OCwvcNu2abVaasJNcvGLwY0q
      WkB6AuwadDodisXithXhhEogmRXx7weDgaoSi0JEsjURUJVc+Yzcp1wuMzY2tulnGpVfFAj1
      Qr67UFiZobq4uEi/3+fAgQPq+wWapqVB8G6BuCzbUYVLUgdGX8/n8ziOQ7PZHKq4JvP8EhDL
      d0ujzFYNcr1rLcsiCALFP4Ll2KXRaKjNN4oi1Tss6VJIXaBdg+WWwRbdbneVoO1O3FvcolE5
      9aS/H0WRMpqkm3K3SEq6S2Aukiyy4IWsJ3GJ7/vLhbodeYIU73gIOU3ShKZpksvl1h2SsVkI
      u7JerwNrj2OVDI4oy62VyrxbiO8vu36hUODgwYOKkCexQ3KIh+d5aQywW7CwsKBcgCQymcyW
      /PD1UK/XabVaqiYgbtBoNblQKGxaTmerkCA7SYmQIlmSpJe8PnWBdgmSBanRQHAnUC6XVeZH
      6MhSP/B9X2WKNhqafbeQ4lyyN0BSn+L2yfwzuT51gXYJhCwm/jqgMjE7YQRCaZBcvNARfN+n
      VCqpgloYhpTLZZUp2qjAtV2Iny81CljJIAljVPSMUgPYJRDOTBLbTYuuheTcgDiOFRFOfG3J
      vCTJcZ7n4TgOlUplR55hI8jvKSeSpE5TA9iFSIpc7ZQBOI6jenthJfsj1WOhRRcKBXRdp9/v
      0+12h3L29xq+7w9lwVIXaJchybmRAHGnUCwWlQFI0iMIAtU34Hkek5OTQ765BMuwfpHrbiH3
      DcOQXq+3KhhODWCXYIgBeXsn3snFJqzOpDqDNMUIWc2yLGWEruuqDq17iSAI1GwDWJ0FSg1g
      F0G6soRQtpMGIG6OGICwQkW9eVUnVqIyLJ+/FxCKRPL+Io5rGEZqALsFURSpvtx7tdhkN5eC
      l5wC/X6f/fv3D/UMj42Nqb/fS0grZPJ7pK8AEi5QUuVrpxEEwZosvhRvLSQteS8hbFDTNFXG
      ZWxsbEju5K3G6AmQhKoE36vFD6g2uBRvH9rttvKD7wShOouGzmYha+hu8/piLDKTbDPXw3Lw
      LfUHkW0ZVbAYhToBdroYkYRwsVO8fZDi0GYg1eKtxgk7sfClYCekuY3uKYU1x3FUI4zQL2Qo
      hjTdrIc0BkixCrKwRn3ne/2d/X5f6fusd/rIM0VRRKfTUScFrMQTyVTnnTyb1ABSrIIssu02
      z8DWg1shsRWLxQ13bFnUjUZjVTwjn5Our6Qsy3pIDSDFKkhK862C9B7btr3h94pxJQl9ycYb
      IdvBcl1CmumT5LtR7lFqACkUkpSFrQbAyXtsFdKrINqeAunnTfKHFhcXh9ya5OKWxS8UaMn1
      R1FEuVzGsiyazabSI9V1PTWAFCuQxWQYxluWtJDAd63vdF2XbrerVCMkxZpsfVwLIrUIqPig
      1Wqp96VjLDWAXYTN7MyimrCWG7Id336zn1mrR0DcIk1bHrWqaRr9fn+VEt12IG7RYDBIG2J2
      C5Lc+PWg6zr5fF65EtuFuC4if7hR/UFaKnVdHxpqIT290sUmac2Nilpbeb52u02r1UpPgN2C
      zRQ6ZdElB+AJNrvoRB7FdV0cxyEMQ0qlklJ9TiLJTC2VSip/LzyhZFpTnj9pJHcDcZFSA9gl
      EB7OnbCe8tqdkJQzr9frSh0iiiKV38/lcqoJRxa0SK6Ljx8EAe12m1wuRzabVQYhM8JGT5Nk
      FuhOz7dWejc1gF2CbrcLrL2Ti0LEdjM/ApEayefzanie5ORlhJJoAokqnO/7tNvtVUUr8fuT
      MurJn4VrtJnTYCMJmNQAdhHWq+wm2yWTgetWAt84jul0OkO7eRKyYJPq0qIqtxbkOzOZjNIa
      TX6X3GMzz5W85+hnUgPYJTAMY5X7IBqeo1mfXq+nGsdt296UdpD4/UJ6LBQKqutLik8yRb7T
      6Qy9N4qkWyNjkASju/koz19+Hq0nrIfUAHYJZLpj8mcJdkcXt67rqpNrMwxSGT6RlB2s1Wos
      LS2p94UaLQ3pG2FUV3Sj65KnlGSNgDWJdKOGkPYE7yLYtj1UQBqVMBRo2vJACmmgSep8rgUh
      pfV6PeX+FAoFWq2WEsEVF6bT6Ww6xToasCZJcOtdL/SH5GtrXZdEWgfYJRilBW+k1GcYBsVi
      cRWXfnTxSGuhFKyk11gyNoAKrEcVozcLMYKkwsROIVWG20XQNG2oF/huqA5JpQXJ8sjOPJpu
      9X2fiYmJLQtgyaKXGsB68cLdYtUTXTx3kuszdcL+As98/xXa7RbR7S++fuMGAHF3luvzTS5e
      n9nxB0px7yDTWLbbFzxKQUguaLmfNKVUKhXVgC+yiFtpxxxlea7lv+8EVonjXrh4nijUsLSI
      tutTyOiMV8pcnl4i1gyqdkS/s0TuwGM4gx56b55GP+IDH/wgWWttC0/Fcd/9kFy+jEESY2i3
      22Sz2aEcv0yBXFpaGnJ9xBVKxgFJ12a97M691G9eY8XqZM2IbqBjaRCFIa1GlwcfeZhC1sCL
      bR66//DtayNm55aoVcfQtHsuMp3ibYZMjEwuaJnuLlwjWeAy4FrmCQtGU5Xiko3qFsn78ud2
      GnSSnxv9T7AqCzQ5OUne0sg7GgY+uhZTyOe4ePEi1Yk9ZHC5ttRi8kCBsJhhb0Gn3osw057f
      H1uMuiHJAXiyyA3DUPN7ZR6wjFB1XXfo1ICVLNRaAa787HneKj3RJFkuKXsOK4Yjw7RHZxuP
      QtO0dD5AijsjjpcnrPi+T7FYxHEcpesjepvi6ogEjuM4alySTHCUZhs5BZKBsXxW3CPDMNRn
      xZDy+bxa0HKP0dSoFPzy+bxikCbvP9rtltYBUmwKQluWYpM0oy8uLipOj1SCk1Pi5TpN01RN
      IeniSIZHPuO6rspWJXP7ciLI30d392RjvBiO/CzPIfeU+gSsYQA3rlyg2XXYs/8+9o6Xh96L
      QpdON6RSyeP1mpw6e5GJfUe4b//Evfg3T/EOQrm8vBZEasTzPObn59Wi8jxPkdPE3bFtWxXU
      ANXQIotPZAtN06Tb7a7y/ZNIZpkANXNMjEuEduXEEBdLFrvs/ELxkBNolQH0Bg6lUolsxuLS
      uTfoeAa1gkGzHzJRgZOnl/jEpz+CEYVEsU4U3l3zRIp3PpIpSdH/HAwGKsUJqBGlQnXQNE0t
      fFl4lmUpSXTZicVYNtOEL4G2VJXz+Ty5XE7t/jLCFZbdbl3X1VT7XC6nnkVSspqmrc4C6aZF
      rVYjm4lp1HvMz82QL5Yg8MiUaxw9eoycZbA0v0gubzE7M0eQJoDe8dipUE/TNDqdDu12W+X3
      6/U6g8FAaYLm83k1ujQ5OCM5QBtWgtY7dasls0XCKSqXy8oNSi58MVYZkyS9xoPBQH2fuFth
      GK42gFIuw7Vr12i2HfL5LHunpoijCAyTXLZC6Cwy8EMqEzXCAKqVIjtYnU5xj7AThSPZxcvl
      MsViURXUyuUye/bsQdM0PM+j3++r7I1t28sbajZLoVAYomOUy2UmJibUYkyKXCUhgbOcLtls
      VgXJEjQn06m6rqv+Zmm4GZ2Go4LoNAuUYjOQzI6u64rOXC6XVaDa6XQol8vMzs7iuq7S5Rwb
      GxtqsZQCWRzHalh2s9lkMBgMZZIAtcDDMFRjVpMxhOzo8n3yGVgRZB4l8yU7z/L5fJoFSrE5
      eJ7H3Nyc2l1lYUtQWSqVcByH/fv3c+PGjaFMTb/fVxkcSY02m021m+dyOTW9ReICz/PodrtD
      KVfDMFSsIDu+BN2wIrECK9mg0aLbYDDAcRympqaWJRhHf9GZG5fIjB3E6zeY2js18m5Mrzcg
      n7epL3UZnxi7V//eKd6BsG1bLWJZlILkzlytVjEMg1wuR6PRUPFBGIZqJvEPX30Bx3f5lYlf
      HJJDlMVvGIZqi3Rdl3w+rxb66I6erAsk06QCXdeVscoYVXHfVhlAxwlo3LxCGAWUMgbnr95i
      ct9hgvYsfmxw7twlPvjRD3Du5BnGpvbx2MMn0hhgF8CyLPL5PIZhkM/n1W6dDEQlFVkul5XY
      lWVZyjCuXr/GlZvXuD5zgxcunGRWazH4K48PnXgf/9/3voof+Pzjjz7NI8ffo5rhpTYgRbBk
      RioJKXIlC2swPB0yk8lQKpVYXFwkCIK1J8RomsGessHJq22yzPPwe9/HhTOn0aKQhx89gedG
      7KmV6Ry+H0N3iIDN6Q2keDcjk8lQLBZVZkf8dMmzywA8QO2ygDopPM/jK89+nbMLVzB8QAdd
      h+9cfp5vX/oR3N5Ev/Pa9zl+3/0qbuj3+2r2cK/Xo1gsDlWDYUVES54zmREaTeHC8ikjPcyr
      DKBQKDA+tYf8jQX27ZvgzGuvMbHvEGbsomk6lu4zX+9RKOTQdYN0898dkOETkoaU8aayGCUv
      n2R7js4AK2Az7ueZz/QwIg3Dh8CMiYkhXr6mUiiroRie52FZ1lDldtS9Ufe+XVtIxh5SB5BC
      nfCHyuUyg8FgeQjI6C+6f98+AJ78yIcAeKK2d+j9Bx95fEf+QVO8eyCBrIzRkhGo4lP3ej1M
      06TT6ZDJZJSRCCcnDEMGgwGP3/ceXp0/R9bV8MwYK9QpaDnqdNVOfW3hlmqygeFWTuk9lukv
      8myjdOqkEYpBSF+ynFJSgEspnCnWhSyuXq+3nNvXdRzXwff7XL86g+M4y/QHz6E78JUrIovP
      8zx67SbNbo/p2Rn+8Ad/Tjf0cXIxZqSR0W1+81P/mKKWIRj4EMOS3+aNN17gueee4+yVW3ie
      pyrJ2WyWhcVF9TzyZ7fbVfTrUddIlORGJRUli2T83u/93u8N/9Ihr770EuNT+2nN3eDGUpfa
      WBkt8ml1HLKZO2tMjmKtMZkp3h1wXZdms3k7P+/z8smTHL9/nDdeXiAO61y4Nk+1mKXbXOIP
      vvxlDh97iMunX8HRcvSXbvLNr/81WnWKxx+8n9de+iEXb90kk7Vod9r0zYBzr5zmn33pP+by
      d1/GdWC8VuM9BZN9TzzN0T0Frl8+y9kL16jP3YR8FY2QyHU5e/Ei/cYcF64v4i5d4mvffoEH
      HjzK66+8RKY0zqVTL9IOLGqV5ViiUCgoeZdkML3KALzOPEttl9jKc/Hky2TH93Lj3Eliw6TV
      DVi4dYmljkvQb3D27BWqe/di6XdW/00N4N0H8e1l3m8YBFy9cYNDB8a5ebVFp+8wYYS0AgfP
      rJDL6hww23zvzVnm5+YZeB6f+ODj+NkK1UzEuVOXOXfxIrod4cQWGSNiZn6Oky+dpun3uP9A
      jf/01/9Ljtd0/uG1K+i6zsLsNDU/xDh8mCsXrzG7MEtvbob7Hn4f7YVbnHzuhxz94Icol8bp
      33iTy4stZucWcToNyuN72DNeJZ/PK1dsVP1ulQt09fJ1QgJu3rjB1L7DHD1ygEJlgv0TJQYD
      h8DIcfzoIepLdZzmPE1nc5MHU7z7IEUjydHruoHudPjmN75P9f5JSpXyMtdG08kXCrTmbtI1
      imSJuP/YUeJ+gx/86FU8P+DW5Qt8+JM/y6/8zM8y6Ebkq3m8Tp/IMpjT67T7Td64PsNUJYOm
      G+ga2Jksk3v2kMsWmJysUimXsUyTYnUPxw5PMRh4TO6pYWZKTF89T2BlIdZ56KHjTNZqzC00
      2bNnD+VyWRXgRrGKCjE7O8fU1F7mZucwgfLUXtqLi4xXC8zWPaLBIt3QJhP1aXcG3Peexyhn
      Nk6EplSIdyfCMKTZbKqfpZoLKNHbXC43RG+W98VwRlUistks/83//T9xbuEqMTGWr2EGOkbR
      5ne++Jt86H0fGLo+jmMajcZQzaFSqaggNooiFhYWlPZpFEVUq1XK5fIQSU6C4FEjWOWXTE0t
      Z332Tq1kf8Ynlvn+U5M5oLLFf8YU71bIhBZYIaQlRWmFZ5/sukr+ffQ9aZ382P3v58LcVSJN
      I8xq/PRDH+NzH3uKQwcOrvkcQpYzDINSqbSK4iDMUEGz2SSXyw0tdmnoF/EuQeqYp1gXMuRC
      aA22bSsFOGlTlH4AWejCt5cdWyBszna7zf69+zhY3cdHTjzBT733I5RKpVULU6Bpy/OCpbK8
      llJdLpdT0umSDer1eqpWAStjn6RvQd0/ZYOmWA/S8tjr9VQqMUk1zmQyqtEkCAJ6vR6lUokw
      DHFdVwWcMgJV+gQGgwGVSkV1dQllYr2RpnEcU6/XsSxr1SA9Qb/fx7ZtBoMBrVaLiYmJIZKc
      sEyjKBpSvEtPgBTrwjAMJiYm8DyPdrtNpVJRfB/h2YtfLj230ngiwroy+lRaF4U+3W63AajV
      aqryux40TVMTZJJxSBLSgCN9CknRLnHHdF1X1Ip1e4JT/HhCyF9bbYwxDIP9+/cr/gys8IKk
      +iuVYOkXlkJYcmav9BFnMhlVnBLp9c1A+ovXclhEca7dbis1OsFgMKDdbjM+Po5hGKuMIzWA
      XYJ6vc7ExMS2OsPkJEgiuZubpkm9XlcDMITIJiS2drutFrvnecRxTD6fX3Nu2EZY71rDMJRC
      nSjXybyzxcXFoRGsYqjyO6QGsEsgzeHCo9mOytpar0lsIEHsqPqaFNHk9JHMjOzIOwHh+y8t
      Lan7N5tN5ubmVBtno9FQLZkSy6ypCpHixxNRFNFsNlXTum3ba+bpt4NMJqMG441WWsUNEgWJ
      bDbL2NjYji1+gUi6dzqdVcJdpVJJtUFKFimKIrrdbmoAuwmyY/f7fdW4XiwWVVFpu/csFArk
      83l6vR62bQ9xbSSzI9kX27Y3NbN4O88hwbScQLVaTb0vhigMVlhuyk8NYJchSQYLw1BNa7zb
      e0qM4LquCobF3xYODrAt92srz1EoFJQahGShJAaQ/mU5pXRdTw1gt0AU04RWLFhrKPZ2YFkW
      uq6rAFR0OcMwVKoRIqNeKpWG+Pw7bRBSU0hmjJJ6pMkKdWoAuwSipQMrAa2MM9qJBZhsYkm6
      GbLjAoo+IZBMzWZToVtF8veS7xUXbTAYLPcd35NvTvGOw1oN4+vRD7YDmROWpESIqyG6PUk1
      aFGV1nX9nhnAKIQiIanYNAu0iyCB4VAOfAd7NIRsBsuLW2QSc7mcklSvVCoq9z+arbnXkOA/
      ObAjrQPsUkg+fidTkZVKRXFtoihSg7Il7pD5ZHISiE8uGaFRGZOdgohleZ63arp8egLsMogP
      nsvl7ir1uRYkAE6K4cp3Oo5DoVBQBShAZWjuZlrlZtDv94fU4mB4sHdqALsEsvjGx8fvyaJL
      Br7iY0vRTTI/ySBcMkFJXv+9wHoVbCXLfk++NcU7DuLz38sd17ZtlfURykUQBGSz2VUnzlqM
      znuB0bhH/pQCneoHEB2XewHpxEnx9kGO/M0YgBjLVmOEOI7xfV81wsipsx3KRXJ00mYhfQi6
      rg81zmy0rlc1xHiDDheu3OTo/cfJZ0a/PEau7vd7FAqbK6KkDTFvP1qt1qY3ONH/HOX13Al3
      G8gmG1ccx8G27TuuGym2AXQ6HaUjJKhWqxsa/SrzOnP6LCcefYwoCrh+6RJRpkIlZ1EeL1Of
      XuCFV17l/R/+KLcun6ZYO8CJB47cM/8txdsDyd5sNU16t+tAusrEANc6NZKVXNEplSA3SfEQ
      SOfaelj1G5448QDnzrxBrVqiGVWw2kt0l2KK41nmlxyOHDnC1MQY9fkxLN0niMBK1XF/7CCM
      yZ1mba4HYWfatk0+n9/QmCSn3+l0hl5PdqIltUE3wqqzob60hG7o+HoeZ+kaHSeglDM4feos
      ARqR12N2sUm+kMe2dp7Vl+LtRdIj3k7AnFSG2MpnkvPF7nSSJNWgk70Hya4xEcEd/R1Gny1t
      it8l2GwMIKoO0vL4VkC6xkalTJKN+IJer6c6z9ZbutL6KHFEHMdqIIaoWkiQnKZBUwzhXlSJ
      7wSpG4xmCkVVWk4FEeMalUcfhUg6SrM+rAh1yZyzWq22nBZe4+N02m2StuW5A4KNvzPFjwE0
      Tdt28/x2kRTMWut1x3HUgL52u31HBQlgzeb5MAyHeEBy3SoDiAKXF3/0I9oDn9bSLJeuTeP2
      ewRRwKXzZ6m3+6MfSfEuwGbqMJL/l6xKElv17SU9uZ6SQxIyF2yUvy+0Ctd1FZ/Hdd27Ns4o
      itS0yv8f+LYXoFUk6eEAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
